Input
1->2->3->4->5->6
Output
1->4->2->5->3->6

approach

1 using two loops

for curr node in list:
        last=find_the_lastNode(curr)
        curr.next=last
Time complexity: O(N)
space complexity: O(1)
********************************
2. using Stack

store the nodes in the stack

for curr node in list:
    temp=stack.pop()
    curr.next=temp;
}
********************************

3.divide the list into two half
1->2->3
4->5->6

revesrse the secondhalf
6->5->4

merge the both half

1->6->2->5->3->4


