// navie approach is here
// Time complexity: O(nlogn)
// space complexity: O(n)

function   (int arr[], int N)
	{
       // step1
       // Sort the array

       Array.sort(arr);

       //step2
        creating a list for storing the unique elements of array
        ArrayList<Integer> list = new ArrayList<Integer>();
        list.add(arr[0]);
        for(i=1; i<n;i++){
            if(arr[i]!=arr[i-1]){
                v.add(arr[i]);
            }
        }

    //step3
    //the final part of the algorithm to calculate the longestCommonSubSeq
        int count = 0;
        for(int i=0;i<v.size();i++){
            if(i>0 && v.get(i)==v.get(i-1)+1){
            count++;
            }
            else {
                count=1;
            }
        }

	}