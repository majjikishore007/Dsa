/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry=0;
        int rem=0;
        int sum=0;
        
        ListNode dummy=new ListNode(0);
        ListNode t=dummy;
        while(l1!=null && l2!=null){
            sum=(l1.val+l2.val)+carry;
            
            rem=sum%10;
            
            ListNode temp=new ListNode(rem);
            t.next=temp;
             t=temp;               
            carry=sum/10;
            
            l1=l1.next;
            l2=l2.next;
                        
        }
        while(l1!=null){
             sum=(l1.val)+carry;
             rem=sum%10;
            ListNode temp=new ListNode(rem);
            carry=sum/10;
            t.next=temp;
            t=temp;
            l1=l1.next;
        }
        while(l2!=null){
             sum=(l2.val)+carry;
             rem=sum%10;
            ListNode temp=new ListNode(rem);
            carry=sum/10;
            t.next=temp;
            t=temp;
            l2=l2.next;
        }
        if(carry!=0){
             ListNode temp=new ListNode(carry);
           t.next=temp;
            t=temp;
        }
        return dummy.next;
    }
}