/**
the idead is simple 
using slow and fast pointers find the cycle 
the make one of them as head and itreate them till they beacomes eaqual 
which is the loop point

the  mark the next pointer as null 
*/

//Time complexity: O(N)
//secondhalf complexity: O(1)

public static void removeLoop(Node head){
        // code here
        // remove the loop without losing any nodes
        Node slow=head,fast=head;
        boolean isCycle=false;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            
            if(slow==fast){
                isCycle=true;
                break;
            }
        }
       if(isCycle){
        if(slow==head){
            while(slow.next!=fast){
                slow=slow.next;
            }       
            slow.next=null;
        }
        else{
            fast=head;
            while(fast.next!=slow.next){
                fast=fast.next;
                slow=slow.next;
            }
            slow.next=null;
        }
       }
        
    }